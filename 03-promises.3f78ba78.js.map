{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAUC,SAASC,cAAc,uBACjCC,EAASF,SAASC,cAAc,sBAChCE,EAAWH,SAASC,cAAc,wBAClCG,EAAYJ,SAASC,cAAc,yBACzC,IAAII,EAAU,EAgCdD,EAAUE,iBAAiB,SAAS,KAvBlCC,YAAW,WAET,MAAMC,EAAIC,aAGV,WACwBC,KAAKC,SAAW,GAGpCd,EAAAe,OAAOC,QAAQ,YAGfhB,EAAAe,OAAOE,QAAQ,YAEjBT,KACKA,IAAaF,EAASY,QACzBC,cAAcR,GACdH,EAAU,E,GAfuBH,EAAOa,MAAOZ,EAASY,M,GAkB3DhB,EAAQgB,MAIO","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst delayEl = document.querySelector(\"input[name='delay']\");\nconst stepEl = document.querySelector(\"input[name='step']\");\nconst amountEl = document.querySelector(\"input[name='amount']\");\nconst submitBtn = document.querySelector(\"button[type='button']\");\nlet counter = 0;\n// const intervalID = setInterval(\n//   myCallback,\n//   stepEl.value,\n//   'Parameter 1',\n//   'Parameter 2'\n// );\n\nconst generatePromises = () => {\n  setTimeout(function createPromise() {\n    // for (i = 0; i < amountEl.value; i++) {\n    const x = setInterval(createResults, stepEl.value, amountEl.value);\n    // }\n\n    function createResults() {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        Notify.success('resolved');\n      } else {\n        // Reject\n        Notify.failure('rejected');\n      }\n      counter++;\n      if (+counter === +amountEl.value) {\n        clearInterval(x);\n        counter = 0;\n      }\n    }\n  }, delayEl.value);\n};\n\nsubmitBtn.addEventListener('click', () => {\n  generatePromises();\n});\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$delayEl","document","querySelector","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$submitBtn","$47d4ff9957288465$var$counter","addEventListener","setTimeout","x","setInterval","Math","random","Notify","success","failure","value","clearInterval"],"version":3,"file":"03-promises.3f78ba78.js.map"}